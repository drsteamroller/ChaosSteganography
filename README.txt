I originally did this same project in my Human Factors in Cyber Security class in the spring of 2020. It was originally (requested by my professor) written in Matlab, which I could not access anymore so I decided to rewrite it in Python. It focuses on LSB insertion in pixels in the cover media to produce a stego-image. Instead of picking a seed for the random module in Python, I use the chaos function, which is usually used to describe population levels over periods of time. It can be viewed and played with here: https://www.desmos.com/calculator/vlntpv9yhg. 
Currently, chaos_unstego.py doesn't reproduce the exact same message out. My reasoning for this is either the Pillow module (Python image processing) or Windows manipulating the photo (through compression or otherwise) before it gets saved. I made sure to limit the floats generated by the chaos function to 3 significant figures, and both programs pick the same coordinates, so the values are being manipulated somehow.

chaos_stego.py => This program takes a cover media photo (best is PNG or BMP) and a text file. It process the text file into bits and inserts those using the chaos function into the cover media. It saves the new image in the same path, and also a key file containing the starting values of the chaos function.

chaos_unstego.py => This takes a stego-image and a key file and prints out the original message.

key.txt => key file generated by chaos_stego.py.

LIP.txt => Lorem ipsum... text file that is a sample secret message to be implanted.

There are a few cover photos and stego photos, which are denoted by an "_altered" in the name.